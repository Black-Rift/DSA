
#include <iostream>
using namespace std;
struct node{
     int data;
     struct  node* left;
     struct node* right;
     node(int val){
         data=val;
         left=NULL;
         right=NULL;
     }
};
int search(int inorder[], int st, int end, int curr){
    for(int i=st;i<=end;i++){
        if(inorder[i]==curr){
            return i;
        }
    }
    return -1;
}
node* buildtree(int preorder[], int inorder[], int st, int end){
    static int idx=0;
    if(st>end){
        return NULL;
    }
    int curr=preorder[idx];
    idx++;
    node* no=new node(curr);
    if(st==end){
        return no;
    }
    int pos=search(inorder, st, end, curr);
    no->left=buildtree(preorder, inorder, st,pos-1);
    no->right=buildtree(preorder, inorder, pos+1, end);
    return no;
}
void printinorder(node* root){
    if(root==NULL){
        return;
    }
    printinorder(root->left);
    cout<<root->data<<" ";
    printinorder(root->right);
}
int main() {
  
       int preorder[]={1,2,4,5,3};
       int inorder[]={4,2,1,5,3};
       node* nayaroot= buildtree(preorder, inorder, 0,4);
       printinorder(nayaroot);
       
    return 0;
}
